[1/12] Linking C static library esp-idf/spiffs/libspiffs.a
[2/12] Linking C static library esp-idf/wifi_provisioning/libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cd /home/training/hiya/rtos/semaphore/build/bootloader/esp-idf/esptool_py && /home/training/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/training/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/training/hiya/rtos/semaphore/build/bootloader/bootloader.bin
Bootloader binary size 0x6720 bytes. 0x8e0 bytes (8%) free.
[4/12] No install step for 'bootloader'
[5/12] Completed 'bootloader'
[6/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/semaphore.c.obj
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Building C object CMakeFiles/semaphore.elf.dir/project_elf_src_esp32.c.obj
[10/12] Linking CXX executable semaphore.elf
[11/12] Generating binary image from built executable
esptool.py v4.5.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/training/hiya/rtos/semaphore/build/semaphore.bin
[12/12] cd /home/training/hiya/rtos/semaphore/build/esp-idf/esptool_py && /home/training/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/training/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/training/hiya/rtos/semaphore/build/partition_table/partition-table.bin /home/training/hiya/rtos/semaphore/build/semaphore.bin
semaphore.bin binary size 0x28320 bytes. Smallest app partition is 0x100000 bytes. 0xd7ce0 bytes (84%) free.
